[package]
name = "obel_platform"
version = "0.0.0"
description = "Platform-agnostic types and api"
keywords = ["obel", "obel_platform"]
categories = { workspace = true }
edition = { workspace = true }
rust-version = { workspace = true }
homepage = { workspace = true }
license = { workspace = true }
repository = { workspace = true }
documentation = { workspace = true }
readme = { workspace = true }

[features]
default = ["std"]
# Platform Compatibility
## Allows access to the `std` crate. Enabling this feature will prevent compilation
## on `no_std` targets, but provides access to certain additional features on
## supported platforms from deps of critical-section,portable-atomic and portable-atomic-util .
std = [
  "alloc",
  "critical-section?/std",
  "portable-atomic?/std",
  "portable-atomic-util?/std",
]
alloc = ["portable-atomic-util?/alloc"]
generic = ["critical-section", "portable-atomic"]
## provides the building blocks for synchronization primitives
## on all platforms, including `no_std`.
critical-section = ["dep:critical-section", "portable-atomic?/critical-section"]
## provides additional platform support for atomic types and
## operations, even on targets without native support.
portable-atomic = ["dep:portable-atomic", "dep:portable-atomic-util"]

[dependencies]
critical-section = { workspace = true, optional = true }
portable-atomic = { workspace = true, optional = true, features = ["fallback"] }
portable-atomic-util = { workspace = true, optional = true }
[target.'cfg(target_arch = "wasm32")'.dependencies]
web-time = { workspace = true }
getrandom = { workspace = true, features = ["js"] }


[dev-dependencies]
static_assertions = { workspace = true }

[lints]
workspace = true

[package.metadata.docs.rs]
workspace = true

[badges]
maintenance = { status = "actively-developed" }
